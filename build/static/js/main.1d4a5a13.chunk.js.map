{"version":3,"sources":["components/Note.js","services/notes.js","NotesApp.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","changedNote","returnedNote","catch","error","setTimeout","n","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"8KAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCN1CK,EAAU,aAuBD,EArBA,WACX,IAAMC,EAAWC,IAAMC,IAAIH,GACrBI,EAAc,CAChBC,GAAI,IACJP,QAAS,mCACTQ,KAAM,2BACNV,WAAW,GAEf,OAAOK,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAAAO,GAEX,OADgBT,IAAMU,KAAKZ,EAASW,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACJ,EAAIM,GAEhB,OADgBT,IAAMW,IAAN,UAAab,EAAb,YAAwBK,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC2DvCK,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKlB,UAAU,QAAf,SACGkB,KAKDC,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GAKSC,EAtGH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,iBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,0BAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,IAEGzB,MAAK,SAAA0B,GACJT,EAASS,QAEZ,IAEH,IAmBMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAA1C,GAAI,OAAIA,EAAKG,aAoBhE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcmB,QAASc,IACvB,8BACE,yBAAQ9B,QAAS,kBAAM6B,GAAYD,IAAnC,kBACAA,EAAU,YAAc,WAG1B,6BACGO,EAAYE,KAAI,SAAA3C,GAAI,OACjB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBA7BjC,SAACW,GAC1B,IAAMZ,EAAO8B,EAAMc,MAAK,SAAA5C,GAAI,OAAIA,EAAKY,KAAKA,KACpCiC,EAAW,2BAAO7C,GAAP,IAAaG,WAAWH,EAAKG,YAE9CoC,EAAmB3B,EAAIiC,GAAa/B,MAAK,SAAAgC,GACvCf,EAASD,EAAMa,KAAI,SAAA3C,GAAI,OAAIA,EAAKY,KAAOA,EAAKZ,EAAO8C,SAEpDC,OAAM,SAAAC,GACLX,EAAgB,SAAD,OACJrC,EAAKK,QADD,sCAGf4C,YAAW,WACTZ,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAQ,GAAC,OAAIA,EAAEtC,KAAOA,SAe0BuC,CAAmBnD,EAAKY,MAArEZ,EAAKY,SAGtB,uBAAMwC,SArDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBlD,QAAS2B,EACTnB,MAAM,IAAI2C,MAAOC,cACjBtD,UAAYuD,KAAKC,SAAW,IAE9BpB,EACUgB,GACPzC,MAAK,SAAAgC,GACJf,EAASD,EAAMb,OAAO6B,IACtBb,EAAW,QA0Cb,UACI,uBAAO2B,MAAO5B,EAAS6B,SAxCN,SAACR,GACxBS,QAAQC,IAAIV,EAAMW,OAAOJ,OACzB3B,EAAWoB,EAAMW,OAAOJ,UAuClB,wBAAQK,KAAK,SAAb,qBAEJ,cAAC,EAAD,Q,MCvENC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1d4a5a13.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important ? 'make not important' : 'make important'\n    return (\n        <li className='note'>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )  \n}   \n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request =  axios.get(baseUrl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        date: '2019-05-30T17:30:31.098Z',\n        important: true,\n      }\n    return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, {useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important:  Math.random() < 0.5\n    }\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(note => note.id===id)\n    const changedNote = {...note, important:!note.important}\n\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>show {\n        showAll ? 'important' : 'all'\n        }</button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n            <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n          <input value={newNote} onChange={handleNoteChange}/>\n          <button type='submit'>save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './NotesApp.js'\nimport './index.css'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}